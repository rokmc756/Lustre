---
- name: Cleanup Devices
  import_tasks: cleanup-devices.yml


- name: Add Lustre Kernel Module
  modprobe:
    name: lustre
    state: present


- name: Ensure MGS Has Been Formatted
  shell: |
    /usr/sbin/mkfs.lustre --mgs /dev/{{ item.dev }}
  register: command_result
  loop: "{{ _cluster.mgs }}"

  # failed_when: "command_result.rc != 0 and ('was previously formatted for lustre' not in command_result.stderr) and command_result.rc != 17"
  # changed_when: "command_result.rc == 0"


- name: Format MDTs
  shell: |
    /usr/sbin/mkfs.lustre --mdt --fsname={{ item.fs }} --index={{ item_index }} --mgsnode={{ hostvars[groups['server'][0]]['ansible_ssh_host'] }}{{ item.lnet_suffix }} /dev/{{ item.dev }}
  loop: "{{ _cluster.mdts }}"
  loop_control:
    index_var: item_index

  # failed_when: "command_result.rc != 0 and ('was previously formatted for lustre' not in command_result.stderr) and command_result.rc != 17"
  # changed_when: "command_result.rc == 0"


- name: Format OSTs
  shell: |
    /usr/sbin/mkfs.lustre --ost --fsname={{ item.fs }} --index={{ item_index }} --mgsnode={{ hostvars[groups['server'][0]]['ansible_ssh_host'] }}{{ item.lnet_suffix }} /dev/{{ item.dev }}
  loop: "{{ _cluster.osts }}"
  loop_control:
    index_var: item_index

  # failed_when: "command_result.rc != 0 and ('was previously formatted for lustre' not in command_result.stderr) and command_result.rc != 17"
  # changed_when: "command_result.rc == 0"


- name: Create MGS Mount Directory
  file:
    path: "{{ item.mnt_dir }}"
    state: directory
    recurse: yes
  loop: "{{ _cluster.mgs }}"


- name: Mount MGSs
  shell: |
    mount -t lustre /dev/{{ item.dev }} {{ item.mnt_dir }}
  register: command_result
  loop: "{{ _cluster.mgs }}"

  # failed_when: "command_result.rc != 0 and ('is already mounted' not in command_result.stderr)"
  # changed_when: "command_result.rc == 0"


- name: Create MDT Mount Directory
  file:
    path: /lustre/{{ item.fs }}/MDT/{{ item.dev }}
    state: directory
    recurse: yes
  loop: "{{ _cluster.mdts }}"
  # loop: "{{ mdts }}"


- name: Mount MDTs
  shell: |
    mount -t lustre /dev/{{ item.dev }} /lustre/{{ item.fs }}/MDT/{{ item.dev }}
  register: mount_mdts
  loop: "{{ _cluster.mdts }}"

  # failed_when: "command_result.rc != 0 and ('is already mounted' not in command_result.stderr)"
  # changed_when: "command_result.rc == 0"
  # loop: "{{ mdts }}"


- name: Create OST Mount Directory
  file:
    path: /lustre/{{ item.fs }}/OST/{{ item.dev }}
    state: directory
    recurse: yes
  loop: "{{ _cluster.osts }}"
  # loop: "{{ osts }}"


- name: Mount OSTs
  shell: |
    mount -t lustre /dev/{{ item.dev }} /lustre/{{ item.fs }}/OST/{{ item.dev }}
  register: command_result
  loop: "{{ _cluster.osts }}"


  # failed_when: "command_result.rc != 0 and ('is already mounted' not in command_result.stderr)"
  # changed_when: "command_result.rc == 0"
  # loop: "{{ osts }}"



